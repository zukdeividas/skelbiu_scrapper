{"version":3,"sources":["Components/SideNav/SideNav.js","Components/ItemActionButtons/ItemActionButtons.js","Pages/PostsPreview/PostItem/PostItem.js","Pages/PostsPreview/PostsPreview.js","Pages/PostsTable/PostsTable.js","App.js","reportWebVitals.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","iconWidth","minWidth","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","SideNav","props","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","paper","direction","Divider","List","ListItem","component","Link","to","button","ListItemIcon","Dashboard","ListItemText","primary","TableChart","children","ItemActionButtons","photoIndex","setPhotoIndex","isOpen","setIsOpen","showDescription","setShowDescription","post","data","closeDescriptionHandler","seenButton","is_new","seen","NewReleases","RemoveRedEye","Dialog","onClose","DialogTitle","DialogContent","dividers","gutterBottom","description","DialogActions","Button","autoFocus","mainSrc","image_urls","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","isDataTable","Photo","liked","is_liked","window","original_url","OpenInBrowser","Description","media","height","paddingTop","expand","transform","shortest","expandOpen","headerTitle","fontSize","contentText","cardContent","textAlign","PostItem","Card","CardHeader","action","subheader","town","street","CardMedia","image","CardContent","price","room_count","year","heating","house_area","land_area","CardActions","disableSpacing","PostsPreview","posts","setPosts","likedFilter","setLikedFilter","newFilter","setNewFilter","useEffect","updatePosts","params","URLSearchParams","axios","get","retrievePosts","then","res","listItems","map","Grid","item","postId","id","newList","FormControlLabel","value","control","Checkbox","checked","onChange","event","target","name","label","container","justify","dataGrid","marginBottom","boxShadow","PostsTable","columns","field","headerName","renderCell","row","handlePostLike","handlePostSeen","console","log","autoHeight","rows","pageSize","rowsPerPageOptions","pagination","disableMultipleSelection","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b62669a.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Dashboard, TableChart } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 10,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  iconWidth: {\r\n    minWidth: 40,\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function SideNav(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            House posts scraper\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem component={Link} to=\"/\" button key={0}>\r\n            <ListItemIcon className={classes.iconWidth}>\r\n              <Dashboard />\r\n            </ListItemIcon>\r\n            <ListItemText primary={'Posts preview'} />\r\n          </ListItem>\r\n          <ListItem component={Link} to=\"/list-table\" button key={1}>\r\n            <ListItemIcon className={classes.iconWidth}>\r\n              <TableChart />\r\n            </ListItemIcon>\r\n            <ListItemText primary={'Posts table'} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar}>{props.children}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport {\r\n  Description,\r\n  NewReleases,\r\n  OpenInBrowser,\r\n  Photo,\r\n  RemoveRedEye,\r\n} from '@material-ui/icons';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: 250,\r\n  },\r\n}));\r\n\r\nexport default function ItemActionButtons(props) {\r\n  const classes = useStyles();\r\n  const [photoIndex, setPhotoIndex] = React.useState(0);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [showDescription, setShowDescription] = React.useState(false);\r\n\r\n  const post = props.data;\r\n\r\n  const imageClickHandler = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const showDescriptionHandler = () => {\r\n    setShowDescription(true);\r\n  };\r\n\r\n  const closeDescriptionHandler = () => {\r\n    setShowDescription(false);\r\n  };\r\n\r\n  const seenButton = post.is_new ? (\r\n    <IconButton onClick={props.seen}>\r\n      <NewReleases color=\"primary\" />\r\n    </IconButton>\r\n  ) : (\r\n    <IconButton>\r\n      <RemoveRedEye />\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog onClose={closeDescriptionHandler} open={showDescription}>\r\n        <DialogTitle onClose={closeDescriptionHandler}>Description</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>{post.description}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={closeDescriptionHandler} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={post.image_urls[photoIndex]}\r\n          nextSrc={post.image_urls[(photoIndex + 1) % post.image_urls.length]}\r\n          prevSrc={\r\n            post.image_urls[\r\n              (photoIndex + post.image_urls.length - 1) % post.image_urls.length\r\n            ]\r\n          }\r\n          onCloseRequest={() => setIsOpen(false)}\r\n          onMovePrevRequest={() =>\r\n            setPhotoIndex(\r\n              (photoIndex + post.image_urls.length - 1) % post.image_urls.length\r\n            )\r\n          }\r\n          onMoveNextRequest={() =>\r\n            setPhotoIndex((photoIndex + 1) % post.image_urls.length)\r\n          }\r\n        />\r\n      )}\r\n      {props.isDataTable ? (\r\n        <IconButton onClick={imageClickHandler}>\r\n          <Photo color=\"primary\" />\r\n        </IconButton>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      <IconButton onClick={props.liked}>\r\n        <FavoriteIcon color={post.is_liked ? 'primary' : 'action'} />\r\n      </IconButton>\r\n\r\n      {seenButton}\r\n\r\n      <IconButton onClick={() => window.open(post.original_url, '_blank')}>\r\n        <OpenInBrowser color=\"primary\" />\r\n      </IconButton>\r\n      <IconButton onClick={showDescriptionHandler}>\r\n        <Description color=\"primary\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport {\r\n  Description,\r\n  NewReleases,\r\n  OpenInBrowser,\r\n  RemoveRedEye,\r\n} from '@material-ui/icons';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport ItemActionButtons from '../../../Components/ItemActionButtons/ItemActionButtons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 13,\r\n  },\r\n  contentText: {\r\n    fontSize: 13,\r\n  },\r\n  cardContent: {\r\n    textAlign: 'left',\r\n  },\r\n  description: {\r\n    fontSize: 13,\r\n  },\r\n}));\r\n\r\nexport default function PostItem(props) {\r\n  const classes = useStyles();\r\n  const [photoIndex, setPhotoIndex] = React.useState(0);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [showDescription, setShowDescription] = React.useState(false);\r\n\r\n  const post = props.data;\r\n\r\n  const imageClickHandler = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const showDescriptionHandler = () => {\r\n    setShowDescription(true);\r\n  };\r\n\r\n  const closeDescriptionHandler = () => {\r\n    setShowDescription(false);\r\n  };\r\n\r\n  const seenButton = post.is_new ? (\r\n    <IconButton onClick={props.seen}>\r\n      <NewReleases color=\"primary\" />\r\n    </IconButton>\r\n  ) : (\r\n    <IconButton>\r\n      <RemoveRedEye />\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Dialog onClose={closeDescriptionHandler} open={showDescription}>\r\n        <DialogTitle onClose={closeDescriptionHandler}>Description</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>{post.description}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={closeDescriptionHandler} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={post.image_urls[photoIndex]}\r\n          nextSrc={post.image_urls[(photoIndex + 1) % post.image_urls.length]}\r\n          prevSrc={\r\n            post.image_urls[\r\n              (photoIndex + post.image_urls.length - 1) % post.image_urls.length\r\n            ]\r\n          }\r\n          onCloseRequest={() => setIsOpen(false)}\r\n          onMovePrevRequest={() =>\r\n            setPhotoIndex(\r\n              (photoIndex + post.image_urls.length - 1) % post.image_urls.length\r\n            )\r\n          }\r\n          onMoveNextRequest={() =>\r\n            setPhotoIndex((photoIndex + 1) % post.image_urls.length)\r\n          }\r\n        />\r\n      )}\r\n      <CardHeader\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        subheader={\r\n          <Typography className={classes.headerTitle}>\r\n            {post.town + ' ' + post.street}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={post.image_urls[0]}\r\n        onClick={imageClickHandler}\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography className={classes.contentText}>\r\n          <b>Price:</b> {post.price} EUR\r\n        </Typography>\r\n        <Typography className={classes.contentText}>\r\n          <b>Rooms:</b> {post.room_count}\r\n        </Typography>\r\n        <Typography className={classes.contentText}>\r\n          <b>Year:</b> {post.year}\r\n        </Typography>\r\n        <Typography className={classes.contentText}>\r\n          <b>Heating:</b> {post.heating}\r\n        </Typography>\r\n        <Typography className={classes.contentText}>\r\n          <b>House area:</b> {post.house_area} m<sup>2</sup>\r\n        </Typography>\r\n        <Typography className={classes.contentText}>\r\n          <b>Land area:</b> {post.land_area} a\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <ItemActionButtons data={post} />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PostItem from './PostItem/PostItem';\r\nimport { Checkbox, FormControlLabel, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: 50,\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function PostsPreview() {\r\n  const [posts, setPosts] = useState();\r\n  const [likedFilter, setLikedFilter] = useState(false);\r\n  const [newFilter, setNewFilter] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const retrievePosts = () => {\r\n    const params = new URLSearchParams([\r\n      ['is_liked', likedFilter],\r\n      ['is_new', newFilter],\r\n    ]);\r\n\r\n    return axios.get('http://localhost:5000/api/posts', { params });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updatePosts();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updatePosts();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [newFilter, likedFilter]);\r\n\r\n  const updatePosts = () => {\r\n    retrievePosts().then((res) => {\r\n      setPosts(res.data);\r\n    });\r\n  };\r\n\r\n  const handleLikedCheckboxChange = (event) => {\r\n    setLikedFilter(event.target.checked);\r\n  };\r\n\r\n  const handleIsNewCheckboxChange = (event) => {\r\n    setNewFilter(event.target.checked);\r\n  };\r\n\r\n  const handlePostLike = (postId) => {\r\n    axios\r\n      .get('http://localhost:5000/api/posts/' + postId + '/liked')\r\n      .then(() => {\r\n        const newList = posts.map((item) => {\r\n          if (item.id === postId) item.is_liked = !item.is_liked;\r\n          return item;\r\n        });\r\n        setPosts(newList);\r\n      });\r\n  };\r\n\r\n  const handlePostSeen = (postId) => {\r\n    axios\r\n      .get('http://localhost:5000/api/posts/' + postId + '/seen')\r\n      .then(() => {\r\n        const newList = posts.map((item) => {\r\n          if (item.id === postId) item.is_new = false;\r\n          return item;\r\n        });\r\n        setPosts(newList);\r\n      });\r\n  };\r\n\r\n  const listItems = posts\r\n    ? posts.map((post) => (\r\n        <Grid item key={post.id}>\r\n          <PostItem\r\n            data={post}\r\n            liked={() => handlePostLike(post.id)}\r\n            seen={() => handlePostSeen(post.id)}\r\n          />\r\n        </Grid>\r\n      ))\r\n    : 'Loading...';\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControlLabel\r\n        value=\"end\"\r\n        control={\r\n          <Checkbox\r\n            checked={likedFilter}\r\n            onChange={handleLikedCheckboxChange}\r\n            name=\"Liked\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Filter liked posts\"\r\n      />\r\n      <FormControlLabel\r\n        value=\"end\"\r\n        control={\r\n          <Checkbox\r\n            checked={newFilter}\r\n            onChange={handleIsNewCheckboxChange}\r\n            name=\"New\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Filter new posts\"\r\n      />\r\n\r\n      <Grid container spacing={2} justify=\"center\">\r\n        {listItems}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport ItemActionButtons from '../../Components/ItemActionButtons/ItemActionButtons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: 50,\r\n    flexGrow: 1,\r\n    width: '100%',\r\n  },\r\n  dataGrid: {\r\n    marginBottom: 50,\r\n    width: '100%',\r\n    boxShadow: '1px 4px 7px #9E9E9E',\r\n  },\r\n}));\r\n\r\nexport default function PostsTable() {\r\n  const classes = useStyles();\r\n\r\n  const [posts, setPosts] = useState();\r\n\r\n  const columns = [\r\n    { field: 'price', headerName: 'Price', width: 150 },\r\n    { field: 'house_area', headerName: 'House area', width: 150 },\r\n    { field: 'land_area', headerName: 'Land area', width: 150 },\r\n    {\r\n      field: 'id',\r\n      headerName: 'Options',\r\n      renderCell: (params) => (\r\n        <ItemActionButtons\r\n          data={params.row}\r\n          liked={() => handlePostLike(params.row.id)}\r\n          seen={() => handlePostSeen(params.row.id)}\r\n          isDataTable={true}\r\n        />\r\n      ),\r\n      width: 300,\r\n    },\r\n  ];\r\n\r\n  const retrievePosts = () => {\r\n    const params = new URLSearchParams([\r\n      ['is_liked', 0],\r\n      ['is_new', 0],\r\n    ]);\r\n    return axios.get('http://localhost:5000/api/posts', { params });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updatePosts();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const updatePosts = () => {\r\n    retrievePosts().then((res) => {\r\n      console.log(res.data);\r\n      setPosts(res.data);\r\n    });\r\n  };\r\n\r\n  const handlePostLike = (postId) => {\r\n    axios\r\n      .get('http://localhost:5000/api/posts/' + postId + '/liked')\r\n      .then(() => {\r\n        const newList = posts.map((item) => {\r\n          if (item.id === postId) item.is_liked = !item.is_liked;\r\n          return item;\r\n        });\r\n        setPosts(newList);\r\n      });\r\n  };\r\n\r\n  const handlePostSeen = (postId) => {\r\n    axios\r\n      .get('http://localhost:5000/api/posts/' + postId + '/seen')\r\n      .then(() => {\r\n        const newList = posts.map((item) => {\r\n          if (item.id === postId) item.is_new = false;\r\n          return item;\r\n        });\r\n        setPosts(newList);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {posts ? (\r\n        <DataGrid\r\n          className={classes.dataGrid}\r\n          autoHeight\r\n          rows={posts}\r\n          columns={columns}\r\n          pageSize={13}\r\n          rowsPerPageOptions={[13, 20, 30]}\r\n          pagination\r\n          disableMultipleSelection\r\n        />\r\n      ) : (\r\n        'Loading...'\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport SideNav from './Components/SideNav/SideNav';\r\nimport PostsPreview from './Pages/PostsPreview/PostsPreview';\r\nimport PostsTable from './Pages/PostsTable/PostsTable';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <SideNav>\r\n          <Route path=\"/\" exact component={PostsPreview} />\r\n          <Route path=\"/list-table\" component={PostsTable} />\r\n        </SideNav>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}